name=resnet
width=48
heigh=48
channels = 3
batch_size=64
num_classes=7
verbose=1
n=3
init_fm_dim=64
maximum_number_iterations=200
steps_per_epoch=tensorflow.math.floor(train_size / batch_size)
val_steps_per_epoch=tensorflow.math.floor(val_size / batch_size)
loss=keras.losses.CategoricalCrossentropy(from_logits=True)
boundaries=32000 48000
values=0.1 0.01 0.001
lr_schedule=schedules.PiecewiseConstantDecay(boundaries, values)
initializer=initializers.HeNormal()
optimizer_momentum=0.9
optimizer_additional_metrics=["accuracy"]
optimizer=SGD(learning_rate=lr_schedule, momentum=optimizer_momentum)
tensorboard=TensorBoard(log_dir=os.path.join(os.getcwd(), "logs"),histogram_freq=1,write_images=True)
checkpoint = ModelCheckpoint(os.path.join(os.getcwd(), "model_checkpoint"),save_freq="epoch")
callbacks = [TENSORBOARD,CHECKPOINT]
shortcut_type =identity
model_resnet_path =weights/resNet_model_weighs-200iters.h5
model_alexnet_path =weights/AlexNetnew_model_weighs_200.h5
model_vggnet_path =weights/VGGNet_weights-150.h5
model_svm_path =weights/svm_final.pkl